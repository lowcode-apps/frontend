{"version":3,"file":"static/js/124.689f52a5.chunk.js","mappings":"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","sources":["pages/Map/components/CustomTile.tsx","pages/Map/components/Placeholder.tsx","pages/Map/subpages/ZoomOut.tsx","../node_modules/react-leaflet/lib/Rectangle.js","../node_modules/react-leaflet/lib/hooks.js"],"sourcesContent":["import React from 'react';\nimport { MapContainer, TileLayer, useMapEvent } from 'react-leaflet';\n\nconst CustomTile = () => <TileLayer\n    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap by Jagan </a> contributors'\n    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n/>\n\n\nexport default CustomTile;","import React from \"react\";\nfunction MapPlaceholder() {\n  return (\n    <p>\n      Map by Jagan.{' '}\n      <noscript>You need to enable JavaScript to see this map.</noscript>\n    </p>\n  )\n}\n\nexport default MapPlaceholder;","import React, { useCallback, useMemo, useState } from 'react';\nimport {\n    MapContainer,\n    TileLayer,\n    Rectangle,\n    useMapEvent,\n    useMap,\n} from 'react-leaflet';\nimport MapPlaceholder from '../components/Placeholder';\nimport CustomTile from '../components/CustomTile';\n\n// Classes used by Leaflet to position controls\nconst POSITION_CLASSES: Record<string, string> = {\n    bottomleft: 'leaflet-bottom leaflet-left',\n    bottomright: 'leaflet-bottom leaflet-right',\n    topleft: 'leaflet-top leaflet-left',\n    topright: 'leaflet-top leaflet-right',\n};\n\n\nconst BOUNDS_STYLE = { weight: 1 };\n\nfunction MinimapBounds({ parentMap, zoom }: { parentMap: any; zoom: number }) {\n    const minimap = useMap();\n\n    // Clicking a point on the minimap sets the parent's map center\n    const onClick = useCallback(\n        (e: any) => {\n            parentMap.setView(e.latlng, parentMap.getZoom());\n        },\n        [parentMap]\n    );\n    useMapEvent('click', onClick);\n\n    // Keep track of bounds in state to trigger renders\n    const [bounds, setBounds] = useState(parentMap.getBounds());\n    const onChange = useCallback(() => {\n        setBounds(parentMap.getBounds());\n        // Update the minimap's view to match the parent map's center and zoom\n        minimap.setView(parentMap.getCenter(), zoom);\n    }, [minimap, parentMap, zoom]);\n\n    // Listen to events on the parent map\n    //   const handlers = useMemo(() => ({ move: onChange, zoom: onChange }), []) ;\n\n    //   useMapEvent(handlers);\n\n\n    useMapEvent('move', onClick);\n    useMapEvent('zoom', onClick);\n\n    return <Rectangle bounds={bounds} pathOptions={BOUNDS_STYLE} />;\n}\n\nfunction MinimapControl({ position, zoom }: { position: string; zoom: number }) {\n    const parentMap = useMap();\n    const mapZoom = zoom || 0;\n\n    // Memoize the minimap so it's not affected by position changes\n    const minimap = useMemo(\n        () => (\n            <MapContainer\n                style={{ height: 80, width: 80 }}\n                center={parentMap.getCenter()}\n                zoom={mapZoom}\n                dragging={false}\n                doubleClickZoom={false}\n                scrollWheelZoom={false}\n                attributionControl={false}\n                zoomControl={false}\n                placeholder={<MapPlaceholder />}\n\n            >\n                <CustomTile />\n\n                <MinimapBounds parentMap={parentMap} zoom={mapZoom} />\n            </MapContainer>\n        ),\n        [parentMap, mapZoom]\n    );\n\n    const positionClass =\n        (position && POSITION_CLASSES[position]) || POSITION_CLASSES.topright;\n    return (\n        <div className={positionClass}>\n            <div className=\"leaflet-control leaflet-bar\">{minimap}</div>\n        </div>\n    );\n}\n\nfunction ZoomOut() {\n    return (\n        <MapContainer center={[51.505, -0.09]} zoom={6} scrollWheelZoom={false}>\n            <CustomTile />\n            <MinimapControl position=\"topright\" zoom={6} />\n        </MapContainer>\n    );\n}\n\nexport default ZoomOut;\n","import { createElementObject, createPathComponent, extendContext } from '@react-leaflet/core';\nimport { Rectangle as LeafletRectangle } from 'leaflet';\nexport const Rectangle = createPathComponent(function createRectangle({ bounds , ...options }, ctx) {\n    const rectangle = new LeafletRectangle(bounds, options);\n    return createElementObject(rectangle, extendContext(ctx, {\n        overlayContainer: rectangle\n    }));\n}, function updateRectangle(layer, props, prevProps) {\n    if (props.bounds !== prevProps.bounds) {\n        layer.setBounds(props.bounds);\n    }\n});\n","import { useLeafletContext } from '@react-leaflet/core';\nimport { useEffect } from 'react';\nexport function useMap() {\n    return useLeafletContext().map;\n}\nexport function useMapEvent(type, handler) {\n    const map = useMap();\n    useEffect(function addMapEventHandler() {\n        // @ts-ignore event type\n        map.on(type, handler);\n        return function removeMapEventHandler() {\n            // @ts-ignore event type\n            map.off(type, handler);\n        };\n    }, [\n        map,\n        type,\n        handler\n    ]);\n    return map;\n}\nexport function useMapEvents(handlers) {\n    const map = useMap();\n    useEffect(function addMapEventHandlers() {\n        map.on(handlers);\n        return function removeMapEventHandlers() {\n            map.off(handlers);\n        };\n    }, [\n        map,\n        handlers\n    ]);\n    return map;\n}\n"],"names":["CustomTile","_jsx","TileLayer","attribution","url","_jsxs","children","POSITION_CLASSES","bottomleft","bottomright","topleft","topright","BOUNDS_STYLE","weight","MinimapBounds","_ref","parentMap","zoom","minimap","useMap","onClick","useCallback","e","setView","latlng","getZoom","useMapEvent","bounds","setBounds","useState","getBounds","getCenter","Rectangle","pathOptions","MinimapControl","_ref2","position","mapZoom","useMemo","MapContainer","style","height","width","center","dragging","doubleClickZoom","scrollWheelZoom","attributionControl","zoomControl","placeholder","MapPlaceholder","positionClass","className","createPathComponent","ctx","options","rectangle","LeafletRectangle","createElementObject","extendContext","overlayContainer","layer","props","prevProps","useLeafletContext","map","type","handler","useEffect","on","off","useMapEvents","handlers"],"sourceRoot":""}