{"version":3,"file":"static/js/146.3daee524.chunk.js","mappings":"sJAGA,MAMA,EANmBA,KAAMC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAC/BC,YAAY,kGACZC,IAAI,sD,2DCKR,QATA,WACE,OACEC,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,gBACa,KACdL,EAAAA,EAAAA,KAAA,YAAAK,SAAU,qDAGhB,C,8HCJA,MAAMC,EAAgB,CAAC,UAAW,WAYlC,EAVgBC,KAAMH,EAAAA,EAAAA,MAACI,EAAAA,EAAY,CAACC,OAAQH,EAAUI,KAAM,GAAIC,iBAAiB,EAAOC,aAAaZ,EAAAA,EAAAA,KAACa,EAAAA,EAAc,IAAIR,SAAA,EAEpHL,EAAAA,EAAAA,KAACD,EAAAA,EAAU,KAEXC,EAAAA,EAAAA,KAACc,EAAAA,EAAM,CAACR,SAAUA,EAASD,UACvBD,EAAAA,EAAAA,MAACW,EAAAA,EAAK,CAAAV,SAAA,CAAC,yBACkBL,EAAAA,EAAAA,KAAA,SAAM,+B,kFCVhC,MAAMc,GAASE,EAAAA,EAAAA,KAAqB,SAAqBC,EAA4BC,GAAK,IAAhC,SAAEZ,KAAca,GAASF,EACtF,MAAMG,EAAS,IAAIC,EAAAA,OAAcf,EAAUa,GAC3C,OAAOG,EAAAA,EAAAA,GAAoBF,GAAQG,EAAAA,EAAAA,IAAcL,EAAK,CAClDM,iBAAkBJ,IAE1B,IAAG,SAAsBA,EAAQK,EAAOC,GAChCD,EAAMnB,WAAaoB,EAAUpB,UAC7Bc,EAAOO,UAAUF,EAAMnB,UAET,MAAdmB,EAAMG,MAAgBH,EAAMG,OAASF,EAAUE,MAC/CR,EAAOS,QAAQJ,EAAMG,MAEC,MAAtBH,EAAMK,cAAwBL,EAAMK,eAAiBJ,EAAUI,cAC/DV,EAAOW,gBAAgBN,EAAMK,cAEZ,MAAjBL,EAAMO,SAAmBP,EAAMO,UAAYN,EAAUM,SACrDZ,EAAOa,WAAWR,EAAMO,SAEL,MAAnBZ,EAAOc,UAAoBT,EAAMU,YAAcT,EAAUS,aACjC,IAApBV,EAAMU,UACNf,EAAOc,SAASE,SAEhBhB,EAAOc,SAASG,UAG5B,G,mFCxBO,MAAMtB,GAAQuB,EAAAA,EAAAA,KAAuB,SAAqBb,EAAOc,GACpE,MAAMC,EAAQ,IAAIC,EAAAA,MAAahB,EAAOc,EAAQf,kBAC9C,OAAOF,EAAAA,EAAAA,GAAoBkB,EAAOD,EACtC,IAAG,SAA2BG,EAASH,EAAOtB,EAAiB0B,GAAS,IAAxB,SAAErC,GAAWW,GACzD2B,EAAAA,EAAAA,YAAU,WACN,MAAM,SAAEC,GAAcH,EACtB,SAASI,EAAYC,GACbA,EAAMP,QAAUK,IAChBA,EAASG,SACTL,GAAQ,GAEhB,CACA,SAASM,EAAaF,GACdA,EAAMP,QAAUK,GAChBF,GAAQ,EAEhB,CAeA,OAdAJ,EAAQW,IAAIC,GAAG,CACXC,UAAWN,EACXO,WAAYJ,IAEgB,MAA5BV,EAAQf,kBAEQ,MAAZlB,GACAuC,EAASlB,UAAUrB,GAEvBuC,EAASS,OAAOf,EAAQW,MAGxBX,EAAQf,iBAAiB+B,UAAUV,GAEhC,WAAuB,IAAAW,EAC1BjB,EAAQW,IAAIO,IAAI,CACZL,UAAWN,EACXO,WAAYJ,IAEQ,QAAxBO,EAAAjB,EAAQf,wBAAgB,IAAAgC,GAAxBA,EAA0BE,cAC1BnB,EAAQW,IAAIS,YAAYd,EAC5B,CACJ,GAAG,CACCH,EACAH,EACAI,EACArC,GAER,G","sources":["pages/Map/components/CustomTile.tsx","pages/Map/components/Placeholder.tsx","pages/Map/subpages/Pin.tsx","../node_modules/react-leaflet/lib/Marker.js","../node_modules/react-leaflet/lib/Popup.js"],"sourcesContent":["import React from 'react';\nimport { MapContainer, TileLayer, useMapEvent } from 'react-leaflet';\n\nconst CustomTile = () => <TileLayer\n    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap by Jagan </a> contributors'\n    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n/>\n\n\nexport default CustomTile;","import React from \"react\";\nfunction MapPlaceholder() {\n  return (\n    <p>\n      Map by Jagan.{' '}\n      <noscript>You need to enable JavaScript to see this map.</noscript>\n    </p>\n  )\n}\n\nexport default MapPlaceholder;","import React, { useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer, Polyline, Popup, Marker } from \"react-leaflet\";\nimport MapPlaceholder from \"../components/Placeholder\";\nimport CustomTile from \"../components/CustomTile\";\nconst position: any = [13.319535, 80.192469]\n\nconst PinPage = () => <MapContainer center={position} zoom={13} scrollWheelZoom={false} placeholder={<MapPlaceholder />}\n>\n    <CustomTile />\n\n    <Marker position={position}>\n        <Popup>\n            A pretty CSS3 popup. <br /> Easily customizable.\n        </Popup>\n    </Marker>\n</MapContainer>;\nexport default PinPage;","import { createElementObject, createLayerComponent, extendContext } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport const Marker = createLayerComponent(function createMarker({ position , ...options }, ctx) {\n    const marker = new LeafletMarker(position, options);\n    return createElementObject(marker, extendContext(ctx, {\n        overlayContainer: marker\n    }));\n}, function updateMarker(marker, props, prevProps) {\n    if (props.position !== prevProps.position) {\n        marker.setLatLng(props.position);\n    }\n    if (props.icon != null && props.icon !== prevProps.icon) {\n        marker.setIcon(props.icon);\n    }\n    if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n        marker.setZIndexOffset(props.zIndexOffset);\n    }\n    if (props.opacity != null && props.opacity !== prevProps.opacity) {\n        marker.setOpacity(props.opacity);\n    }\n    if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n        if (props.draggable === true) {\n            marker.dragging.enable();\n        } else {\n            marker.dragging.disable();\n        }\n    }\n});\n","import { createElementObject, createOverlayComponent } from '@react-leaflet/core';\nimport { Popup as LeafletPopup } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Popup = createOverlayComponent(function createPopup(props, context) {\n    const popup = new LeafletPopup(props, context.overlayContainer);\n    return createElementObject(popup, context);\n}, function usePopupLifecycle(element, context, { position  }, setOpen) {\n    useEffect(function addPopup() {\n        const { instance  } = element;\n        function onPopupOpen(event) {\n            if (event.popup === instance) {\n                instance.update();\n                setOpen(true);\n            }\n        }\n        function onPopupClose(event) {\n            if (event.popup === instance) {\n                setOpen(false);\n            }\n        }\n        context.map.on({\n            popupopen: onPopupOpen,\n            popupclose: onPopupClose\n        });\n        if (context.overlayContainer == null) {\n            // Attach to a Map\n            if (position != null) {\n                instance.setLatLng(position);\n            }\n            instance.openOn(context.map);\n        } else {\n            // Attach to container component\n            context.overlayContainer.bindPopup(instance);\n        }\n        return function removePopup() {\n            context.map.off({\n                popupopen: onPopupOpen,\n                popupclose: onPopupClose\n            });\n            context.overlayContainer?.unbindPopup();\n            context.map.removeLayer(instance);\n        };\n    }, [\n        element,\n        context,\n        setOpen,\n        position\n    ]);\n});\n"],"names":["CustomTile","_jsx","TileLayer","attribution","url","_jsxs","children","position","PinPage","MapContainer","center","zoom","scrollWheelZoom","placeholder","MapPlaceholder","Marker","Popup","createLayerComponent","_ref","ctx","options","marker","LeafletMarker","createElementObject","extendContext","overlayContainer","props","prevProps","setLatLng","icon","setIcon","zIndexOffset","setZIndexOffset","opacity","setOpacity","dragging","draggable","enable","disable","createOverlayComponent","context","popup","LeafletPopup","element","setOpen","useEffect","instance","onPopupOpen","event","update","onPopupClose","map","on","popupopen","popupclose","openOn","bindPopup","_context$overlayConta","off","unbindPopup","removeLayer"],"sourceRoot":""}