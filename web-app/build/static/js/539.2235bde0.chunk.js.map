{"version":3,"file":"static/js/539.2235bde0.chunk.js","mappings":"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","sources":["pages/Calendar/TimePicker.tsx","pages/Calendar/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { TimePicker } from '@mui/x-date-pickers/TimePicker';\n\nconst  BasicTimePicker=({value=\"\",label=\"\",onChange=(x:any)=>{},minutesStep=1})=> {\n    return (\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\n            <DemoContainer components={['TimePicker']}>\n                <TimePicker \n                minutesStep={minutesStep}\n                    label={label}\n                    value={value}\n                    onChange={onChange}\n                />\n            </DemoContainer>\n        </LocalizationProvider>\n    );\n}\nexport default   BasicTimePicker;","import React, { useState } from \"react\";\nimport {Calendar as BigCalendar, momentLocalizer  } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport {Dialog,TextField,Button} from \"@mui/material\";\nimport \"./index.css\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport BasicTimePicker from \"./TimePicker\";\n \nconst localizer=momentLocalizer(moment);\ninterface UpdatedEvents {\n    title: string;\n    start: string;\n    end: string;\n    desc: string;\n}[]\nconst Calendar = () => {\n  const [events, setEvents] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [start, setStart] = useState(\"\");\n  const [end, setEnd] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [openSlot, setOpenSlot] = useState(false);\n  const [openEvent, setOpenEvent] = useState(false);\n  const [clickedEvent, setClickedEvent] = useState({});\n\n  const handleClose = () => {\n    setOpenEvent(false);\n    setOpenSlot(false);\n  };\n\n  const handleSlotSelected = (slotInfo:any) => {\n    setTitle(\"\");\n    setDesc(\"\");\n    setStart(slotInfo.start);\n    setEnd(slotInfo.end);\n    setOpenSlot(true);\n  };\n\n  const handleEventSelected = (event:any) => {\n    setClickedEvent(event);\n    setStart(event.start);\n    setEnd(event.end);\n    setTitle(event.title);\n    setDesc(event.desc);\n    setOpenEvent(true);\n  };\n\n  const setNewAppointment = () => {\n    const appointment = { title, start, end, desc };\n    const updatedEvents:any = [...events, appointment];\n    setEvents(updatedEvents);\n  };\n\n  const updateEvent = () => {\n    const index = events.findIndex((event) => event === clickedEvent);\n    const updatedEvent:any = [...events];\n    updatedEvent[index].title = title;\n    updatedEvent[index].desc = desc;\n    updatedEvent[index].start = start;\n    updatedEvent[index].end = end;\n    setEvents(updatedEvent);\n  };\n\n  const deleteEvent = () => {\n    const updatedEvents = events.filter(\n      (event:any) => event.start !== start\n    );\n    setEvents(updatedEvents);\n  };\n\n  const eventActions = [\n    <Button\n      color=\"secondary\"\n      onClick={() => {\n        deleteEvent();\n        handleClose();\n      }}\n    >\n      Delete\n    </Button>,\n    <Button\n      color=\"primary\"\n      onClick={() => {\n        updateEvent();\n        handleClose();\n      }}\n    >\n      Confirm Edit\n    </Button>,\n  ];\n\n  const appointmentActions = [\n    <Button color=\"secondary\" onClick={handleClose}>\n      Cancel\n    </Button>,\n    <Button\n      color=\"primary\"\n      onClick={() => {\n        setNewAppointment();\n        handleClose();\n      }}\n    >\n      Submit\n    </Button>,\n  ];\n\n  return (\n    <div id=\"Calendar\">\n      <BigCalendar\n      localizer={localizer}\n        events={events}\n        views={[\"month\", \"week\", \"day\", \"agenda\"]}\n        timeslots={2}\n        defaultView=\"month\"\n        defaultDate={new Date()}\n        selectable={true}\n        onSelectEvent={(event:any) => handleEventSelected(event)}\n        onSelectSlot={(slotInfo:any) => handleSlotSelected(slotInfo)}\n      />\n\n      <Dialog\n        title={`Book an appointment on ${moment(start).format(\n          \"MMMM Do YYYY\"\n        )}`}\n        open={openSlot}\n        onClose={handleClose}\n      >\n        <TextField\n          label=\"Title\"\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <br />\n        <TextField\n          label=\"Description\"\n          onChange={(e) => setDesc(e.target.value)}\n        />\n          <BasicTimePicker\n        //   format=\"ampm\"\n        label=\"Start Time\"\n        minutesStep={5}\n        //   value={start}\n          onChange={(date:any) => setStart(date)}\n        />\n          <BasicTimePicker\n        //   format=\"ampm\"\n        label=\"End Time\"\n        minutesStep={5}\n        // value={end}\n        onChange={(date) => setEnd(date)}\n        />\n        {/* <TimePicker\n          format=\"ampm\"\n          label=\"Start Time\"\n          minutesStep={5}\n          value={start}\n          onChange={(date) => setStart(date)}\n        /> */}\n        {/* <TimePicker\n          format=\"ampm\"\n          label=\"End Time\"\n          minutesStep={5}\n          value={end}\n          onChange={(date) => setEnd(date)}\n        /> */}\n        <div>\n          {appointmentActions}\n        </div>\n      </Dialog>\n\n      <Dialog\n        title={`View/Edit Appointment of ${moment(start).format(\n          \"MMMM Do YYYY\"\n        )}`}\n        open={openEvent}\n        onClose={handleClose}\n      >\n        <TextField\n          label=\"Title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <br />\n        <TextField\n          label=\"Description\"\n          multiline\n          value={desc}\n          onChange={(e) => setDesc(e.target.value)}\n        />\n      \n         <BasicTimePicker\n        //   format=\"ampm\"\n        label=\"Start Time\"\n        minutesStep={5}\n        //   value={start}\n          onChange={(date:any) => setStart(date)}\n        />\n        <BasicTimePicker\n        //   format=\"ampm\"\n          label=\"End Time\"\n          minutesStep={5}\n        //   value={end}\n          onChange={(date:any) => setEnd(date)}\n        />\n        <div>\n          {eventActions}\n        </div>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default Calendar;\n"],"names":["_ref","value","label","onChange","x","minutesStep","_jsx","LocalizationProvider","dateAdapter","AdapterDayjs","children","DemoContainer","components","TimePicker","localizer","momentLocalizer","moment","Calendar","events","setEvents","useState","title","setTitle","start","setStart","end","setEnd","desc","setDesc","openSlot","setOpenSlot","openEvent","setOpenEvent","clickedEvent","setClickedEvent","handleClose","eventActions","Button","color","onClick","deleteEvent","updatedEvents","filter","event","updateEvent","index","findIndex","updatedEvent","appointmentActions","setNewAppointment","appointment","_jsxs","id","BigCalendar","views","timeslots","defaultView","defaultDate","Date","selectable","onSelectEvent","handleEventSelected","onSelectSlot","slotInfo","handleSlotSelected","Dialog","concat","format","open","onClose","TextField","e","target","BasicTimePicker","date","multiline"],"sourceRoot":""}