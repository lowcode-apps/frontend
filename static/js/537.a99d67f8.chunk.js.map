{"version":3,"file":"static/js/537.a99d67f8.chunk.js","mappings":"4OAKA,MAAMA,EAAOC,IAAAA,KAAO,CAClBC,SAAU,CAAC,GAAI,IACfC,YAAa,CAAC,GAAI,IAClBC,QACE,2EAUW,SAASC,EAAcC,GAAiC,IAAhC,KAAEC,GAA2BD,EAClE,MAAM,IAAEE,EAAI,EAAC,IAAEC,EAAI,GAAMF,GAClBG,EAASC,IAAcC,EAAAA,EAAAA,UAA2B,CAACJ,EAAKC,IAM/D,OAJAI,EAAAA,EAAAA,YAAU,KACJH,EAAQ,KAAOD,GAAOC,EAAQ,KAAOF,GAAKG,EAAW,CAACH,EAAKC,GAAK,GACnE,CAACD,EAAKC,EAAKC,KAGZI,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACG,EAAAA,EAAqB,CACpBjB,KAAMA,EACNkB,SAAU,CAACV,EAAKC,GAChBU,iBAAkBT,EAClBU,SAAU,IACVC,cAAc,KAItB,C,m+zTCTA,IAAIC,EAAS,EAEb,MAqEA,EArEYC,KACV,MAAOC,EAAcC,IAAmBb,EAAAA,EAAAA,UAGrC,CAAC,IACGc,EAAOC,IAAYf,EAAAA,EAAAA,UAAc,IAEjCgB,EAAWC,IAAgBjB,EAAAA,EAAAA,UAAckB,IACzCC,EAAWC,IAAgBpB,EAAAA,EAAAA,UAAcqB,GAoBhD,OAlBApB,EAAAA,EAAAA,YAAU,KACRY,EAAgBM,EAAUT,IAE1B,MAAMY,EAAWC,aAAY,KAC3B,GAAIb,IAAWS,EAAUK,OAAS,EAGhC,OAFAd,EAAS,OACTG,EAAgBM,EAAUT,IAI5BA,GAAU,EACVG,EAAgBM,EAAUT,GAAQ,GACjC,KACH,MAAO,KACLe,cAAcH,EAAS,CACxB,GACA,CAACH,KAGFO,EAAAA,EAAAA,MAAA,OAAAtB,SAAA,EACEF,EAAAA,EAAAA,KAACyB,EAAAA,EAAM,CACLC,KAAK,SACLC,WAAS,EACTC,QAASA,KACP,IAAIC,EAAOC,EACPC,EAAMC,EACNpB,EAAQ,GAAK,GACfiB,EAAOb,EACPe,EAAMZ,GACCP,EAAQ,GAAK,IACpBiB,EAAOI,EACPF,EAAMG,GAERnB,EAAac,GACbX,EAAaa,GACblB,GAAUD,GAAeA,EAAQ,GAAE,EAGrCuB,QAAQ,YACRC,GAAI,CAAEC,GAAI,EAAGC,GAAI,GAAIpC,SACtB,qBAGDsB,EAAAA,EAAAA,MAACe,EAAAA,EAAY,CACXC,MAAO,CAAEC,OAAQ,sBACjBC,OAAQ,CAAC,WAAY,YACrBC,KAAM,GACNC,QAAS,EAAE1C,SAAA,EAEXF,EAAAA,EAAAA,KAAC6C,EAAAA,EAAS,CACRC,YAAY,yEACZC,IAAI,wDAEN/C,EAAAA,EAAAA,KAACgD,EAAAA,EAAQ,CAAClC,UAAWA,EAAWmC,MAAM,SACtCjD,EAAAA,EAAAA,KAACT,EAAc,CAACE,KAAkB,OAAZiB,QAAY,IAAZA,EAAAA,EAAgB,CAAC,SAErC,C","sources":["pages/Map/AirplaneMarker.tsx","pages/Map/index.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { LeafletTrackingMarker } from \"react-leaflet-tracking-marker\";\nimport L, { Popup } from \"leaflet\";\nimport React from \"react\";\n\nconst icon = L.icon({\n  iconSize: [45, 45],\n  popupAnchor: [2, -20],\n  iconUrl:\n    \"https://mysql-backup-base.s3.amazonaws.com/New%20Project%20%281%29.png\",\n});\n\ninterface AirplaneMarkerProps {\n  data: {\n    lat?: number;\n    lng?: number;\n  };\n}\n\nexport default function AirplaneMarker({ data }: AirplaneMarkerProps) {\n  const { lat=0, lng=0 } = data;\n  const [prevPos, setPrevPos] = useState<[number, number]>([lat, lng]);\n\n  useEffect(() => {\n    if (prevPos[1] !== lng && prevPos[0] !== lat) setPrevPos([lat, lng]);\n  }, [lat, lng, prevPos]);\n\n  return (\n    <>\n      <LeafletTrackingMarker\n        icon={icon}\n        position={[lat, lng]}\n        previousPosition={prevPos}\n        duration={1000}\n        keepAtCenter={true}\n      ></LeafletTrackingMarker>\n    </>\n  );\n}\n","import \"leaflet/dist/leaflet.css\";\nimport \"leaflet/dist/leaflet.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer, Polyline } from \"react-leaflet\";\nimport AirplaneMarker from \"./AirplaneMarker\";\n// import geopoint from \"./geo-location.json\"; // for vechile location marker in map\n\n// import newGeoPoints from \"./new-points.json\";// for default marker in map\n\n\nimport { Button } from \"@mui/material\";\n// import \"./styles.css\";\n\nimport TrackedLocation1 from \"./coordinates/tracked-location-1.json\";\nimport VechileLocation1 from \"./coordinates/vechicle-location-1.json\";\n\nimport VechileLocation2 from \"./coordinates/vechicle-location-2.json\";\nimport TrackedLocation2 from \"./coordinates/tracked-location-2.json\";\n\n\nimport VechileLocation3 from \"./coordinates/vechicle-location-3.json\";\nimport TrackedLocation3 from \"./coordinates/tracked-location-3.json\";\n\n\n/*\n\nReference  https://codesandbox.io/s/github/varakalaajay/live-tracking-react-leaflet-marker/tree/main/?file=/src/AirplaneMarker.js:0-847\n\n*/\nlet cursor = 0;\n\nconst Map = () => {\n  const [currentTrack, setCurrentTrack] = useState<{\n    lat?: number;\n    lng?: number;\n  }>({});\n  const [count, setCount] = useState<any>(0);\n\n  const [positions, setPositions] = useState<any>(TrackedLocation1);\n  const [geopoints, setGeopoints] = useState<any>(VechileLocation1);\n\n  useEffect(() => {\n    setCurrentTrack(geopoints[cursor]);\n\n    const interval = setInterval(() => {\n      if (cursor === geopoints.length - 1) {\n        cursor = 0;\n        setCurrentTrack(geopoints[cursor]);\n        return;\n      }\n\n      cursor += 1;\n      setCurrentTrack(geopoints[cursor]);\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [geopoints]);\n\n  return (\n    <div>\n      <Button\n        type=\"button\"\n        fullWidth\n        onClick={() => {\n          let post = TrackedLocation2;\n          let geo = VechileLocation2\n          if (count % 3 != 0) {\n            post = TrackedLocation1;\n            geo = VechileLocation1;\n          }else if(count % 3 != 1){\n            post = TrackedLocation3;\n            geo = VechileLocation3;\n          }\n          setPositions(post)\n          setGeopoints(geo)\n          setCount((count: any) => count + 1)\n\n        }}\n        variant=\"contained\"\n        sx={{ mt: 3, mb: 2 }}\n      >\n        toggle location\n      </Button>\n      <MapContainer\n        style={{ height: \"calc(100vh - 52px)\" }}\n        center={[22.2974883, 73.2067383]}\n        zoom={17}\n        minZoom={5}\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <Polyline positions={positions} color=\"red\" />\n        <AirplaneMarker data={currentTrack ?? {}} />\n      </MapContainer>\n    </div>\n  );\n}\nexport default Map;"],"names":["icon","L","iconSize","popupAnchor","iconUrl","AirplaneMarker","_ref","data","lat","lng","prevPos","setPrevPos","useState","useEffect","_jsx","_Fragment","children","LeafletTrackingMarker","position","previousPosition","duration","keepAtCenter","cursor","Map","currentTrack","setCurrentTrack","count","setCount","positions","setPositions","TrackedLocation1","geopoints","setGeopoints","VechileLocation1","interval","setInterval","length","clearInterval","_jsxs","Button","type","fullWidth","onClick","post","TrackedLocation2","geo","VechileLocation2","TrackedLocation3","VechileLocation3","variant","sx","mt","mb","MapContainer","style","height","center","zoom","minZoom","TileLayer","attribution","url","Polyline","color"],"sourceRoot":""}